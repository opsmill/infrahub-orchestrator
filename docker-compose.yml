---
x-orchestrator-config: &orchestrator-config
  POSTGRES_USER: ${POSTGRES_USER:-postgres_user}
  POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres_pass}
  POSTGRES_DB: ${POSTGRES_DB:-postgres_db}

x-sot-config: &sot-config
  INFRAHUB_TOKEN: ${INFRAHUB_TOKEN:-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa}
  NETBOX_TOKEN: ${NETBOX_TOKEN:-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa}
  NAUTOBOT_TOKEN: ${NAUTOBOT_TOKEN:-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa}

services:
  dagster_postgresql:
    image: postgres:11
    container_name: dagster_postgresql
    environment:
      <<: *orchestrator-config

  orchestrator:
    build:
      context: .
      dockerfile: ./Dockerfile_orchestrator
    container_name: orchestrator
    image: orchestrator_image
    restart: always
    environment:
      <<: [*orchestrator-config, *sot-config]
      DAGSTER_POSTGRES_USER: ${POSTGRES_USER:-postgres_user}
      DAGSTER_POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres_pass}
      DAGSTER_POSTGRES_DB: ${POSTGRES_DB:-postgres_db}
      DAGSTER_CURRENT_IMAGE: "orchestrator_image"
      INFRAHUB_SDK_API_TOKEN: ${INFRAHUB_TOKEN:-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa}
    volumes:
      - ./examples-sync-config/:/tmp/sync-config/

  dagster_webserver:
    build:
      context: .
      dockerfile: ./Dockerfile_dagster
    entrypoint:
      - dagster-webserver
      - -h
      - "0.0.0.0"
      - -p
      - "3000"
      - -w
      - workspace.yaml
    container_name: dagster_webserver
    expose:
      - "3000"
    ports:
      - "3000:3000"
    environment:
      <<: *orchestrator-config
      DAGSTER_POSTGRES_USER: ${POSTGRES_USER:-postgres_user}
      DAGSTER_POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres_pass}
      DAGSTER_POSTGRES_DB: ${POSTGRES_DB:-postgres_db}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    depends_on:
      - dagster_postgresql
      - orchestrator

  dagster_daemon:
    build:
      context: .
      dockerfile: ./Dockerfile_dagster
    entrypoint:
      - dagster-daemon
      - run
    container_name: dagster_daemon
    restart: on-failure
    environment:
      <<: *orchestrator-config
      DAGSTER_POSTGRES_USER: ${POSTGRES_USER:-postgres_user}
      DAGSTER_POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres_pass}
      DAGSTER_POSTGRES_DB: ${POSTGRES_DB:-postgres_db}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    depends_on:
      - dagster_postgresql
      - orchestrator
